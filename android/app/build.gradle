/*
 *
 *  Webkul Software.
 * @package Mobikul Application Code.
 *  @Category Mobikul
 *  @author Webkul <support@webkul.com>
 *  @Copyright (c) Webkul Software Private Limited (https://webkul.com)
 *  @license https://store.webkul.com/license.html
 *  @link https://store.webkul.com/license.html
 *
 * /
 */

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '30'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '3.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 35
    ndkVersion "27.0.12077973"
    namespace "com.example.test_new"

    compileOptions {

        coreLibraryDesugaringEnabled = true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        buildConfig = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }


    defaultConfig {
        applicationId "com.waynik.android"
        minSdkVersion 23
        targetSdkVersion 35
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled = true
    }

    buildFeatures {

        dataBinding = true
    }

    buildTypes {
        buildTypes {
            debug {
                debuggable true
                minifyEnabled false
            }

            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
    lint {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.7.0')

    implementation 'com.facebook.android:facebook-android-sdk:8.2.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.17.1'
    // Add or update the androidx.window dependency
    implementation 'androidx.window:window:1.0.0'

    implementation 'com.google.android.play:review:2.0.1'
    implementation("com.google.android.play:app-update:2.1.0")

    implementation("com.google.android.play:app-update-ktx:2.1.0")


//    implementation "org.jetbrains.kotlin.android :$kotlin_version"
    //    ML KIT
    api 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.0'
    api 'com.google.mlkit:image-labeling:17.0.7'
    // Image labeling custom
    api 'com.google.mlkit:image-labeling-custom:17.0.1'
    //===Ar Core
    implementation "com.google.ar.sceneform.ux:sceneform-ux:1.17.1"
    //  implementation "com.google.ar.sceneform:core:1.17.1"
    implementation 'com.google.ar.sceneform:assets:1.17.1'
    implementation "com.google.ar:core:1.30.0"
    //---------------------------------------//
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.google.android.material:material:1.5.0'

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.9")

    implementation project(':payment-sdk')
    implementation project(':payment-sdk-core')
    implementation project(':payment-sdk-samsungpay')
}
